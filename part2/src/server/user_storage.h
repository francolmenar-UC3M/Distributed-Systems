/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _USER_STORAGE_H_RPCGEN
#define _USER_STORAGE_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


struct get_user_1_argument {
	char *username;
	struct user *usr;
};
typedef struct get_user_1_argument get_user_1_argument;

struct get_message_1_argument {
	char *username;
	u_int msg_id;
	char *md5;
	struct message *msg;
};
typedef struct get_message_1_argument get_message_1_argument;

#define USERSTORAGE 98
#define USERSTORAGEVER 1

#if defined(__STDC__) || defined(__cplusplus)
#define init 1
extern  enum clnt_stat init_1(int *, CLIENT *);
extern  bool_t init_1_svc(int *, struct svc_req *);
#define register_user 2
extern  enum clnt_stat register_user_1(char , int *, CLIENT *);
extern  bool_t register_user_1_svc(char , int *, struct svc_req *);
#define unregister_user 3
extern  enum clnt_stat unregister_user_1(char , int *, CLIENT *);
extern  bool_t unregister_user_1_svc(char , int *, struct svc_req *);
#define get_user 4
extern  enum clnt_stat get_user_1(char , struct user , int *, CLIENT *);
extern  bool_t get_user_1_svc(char , struct user , int *, struct svc_req *);
#define add_message 5
extern  enum clnt_stat add_message_1(struct message , int *, CLIENT *);
extern  bool_t add_message_1_svc(struct message , int *, struct svc_req *);
#define get_total_messages 6
extern  enum clnt_stat get_total_messages_1(char , int *, CLIENT *);
extern  bool_t get_total_messages_1_svc(char , int *, struct svc_req *);
#define get_message 7
extern  enum clnt_stat get_message_1(char , u_int , char , struct message , int *, CLIENT *);
extern  bool_t get_message_1_svc(char , u_int , char , struct message , int *, struct svc_req *);
extern int userstorage_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define init 1
extern  enum clnt_stat init_1();
extern  bool_t init_1_svc();
#define register_user 2
extern  enum clnt_stat register_user_1();
extern  bool_t register_user_1_svc();
#define unregister_user 3
extern  enum clnt_stat unregister_user_1();
extern  bool_t unregister_user_1_svc();
#define get_user 4
extern  enum clnt_stat get_user_1();
extern  bool_t get_user_1_svc();
#define add_message 5
extern  enum clnt_stat add_message_1();
extern  bool_t add_message_1_svc();
#define get_total_messages 6
extern  enum clnt_stat get_total_messages_1();
extern  bool_t get_total_messages_1_svc();
#define get_message 7
extern  enum clnt_stat get_message_1();
extern  bool_t get_message_1_svc();
extern int userstorage_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_get_user_1_argument (XDR *, get_user_1_argument*);
extern  bool_t xdr_get_message_1_argument (XDR *, get_message_1_argument*);

#else /* K&R C */
extern bool_t xdr_get_user_1_argument ();
extern bool_t xdr_get_message_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_USER_STORAGE_H_RPCGEN */
